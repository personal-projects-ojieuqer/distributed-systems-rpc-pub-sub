// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/process.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PreProcessRPC {

  /// <summary>Holder for reflection information generated from Protos/process.proto</summary>
  public static partial class ProcessReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/process.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProcessReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b3MvcHJvY2Vzcy5wcm90byJnCg1TZW5zb3JSZXF1ZXN0Eg4KBndh",
            "dnlJZBgBIAEoCRIOCgZzZW5zb3IYAiABKAkSDQoFdmFsdWUYAyABKAkSEQoJ",
            "dGltZXN0YW1wGAQgASgJEhQKDHJlY2VudFZhbHVlcxgFIAMoASLUAQoOU2Vu",
            "c29yUmVzcG9uc2USDwoHaXNWYWxpZBgBIAEoCBIWCg5wcm9jZXNzZWRWYWx1",
            "ZRgCIAEoCRIMCgRtZWFuGAMgASgBEg4KBnN0ZGRldhgEIAEoARIRCglpc091",
            "dGxpZXIYBSABKAgSFQoNZGVsdGFGcm9tTGFzdBgGIAEoARINCgV0cmVuZBgH",
            "IAEoCRIRCglyaXNrTGV2ZWwYCCABKAkSGwoTbm9ybWFsaXplZFRpbWVzdGFt",
            "cBgJIAEoCRISCgpvblNjaGVkdWxlGAogASgIMkQKEVByZXByb2Nlc3NTZXJ2",
            "aWNlEi8KDEZpbHRlclNlbnNvchIOLlNlbnNvclJlcXVlc3QaDy5TZW5zb3JS",
            "ZXNwb25zZUIQqgINUHJlUHJvY2Vzc1JQQ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PreProcessRPC.SensorRequest), global::PreProcessRPC.SensorRequest.Parser, new[]{ "WavyId", "Sensor", "Value", "Timestamp", "RecentValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PreProcessRPC.SensorResponse), global::PreProcessRPC.SensorResponse.Parser, new[]{ "IsValid", "ProcessedValue", "Mean", "Stddev", "IsOutlier", "DeltaFromLast", "Trend", "RiskLevel", "NormalizedTimestamp", "OnSchedule" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SensorRequest : pb::IMessage<SensorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorRequest> _parser = new pb::MessageParser<SensorRequest>(() => new SensorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PreProcessRPC.ProcessReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorRequest(SensorRequest other) : this() {
      wavyId_ = other.wavyId_;
      sensor_ = other.sensor_;
      value_ = other.value_;
      timestamp_ = other.timestamp_;
      recentValues_ = other.recentValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorRequest Clone() {
      return new SensorRequest(this);
    }

    /// <summary>Field number for the "wavyId" field.</summary>
    public const int WavyIdFieldNumber = 1;
    private string wavyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WavyId {
      get { return wavyId_; }
      set {
        wavyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sensor" field.</summary>
    public const int SensorFieldNumber = 2;
    private string sensor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sensor {
      get { return sensor_; }
      set {
        sensor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recentValues" field.</summary>
    public const int RecentValuesFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_recentValues_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> recentValues_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> RecentValues {
      get { return recentValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WavyId != other.WavyId) return false;
      if (Sensor != other.Sensor) return false;
      if (Value != other.Value) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!recentValues_.Equals(other.recentValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WavyId.Length != 0) hash ^= WavyId.GetHashCode();
      if (Sensor.Length != 0) hash ^= Sensor.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      hash ^= recentValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WavyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WavyId);
      }
      if (Sensor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sensor);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Timestamp);
      }
      recentValues_.WriteTo(output, _repeated_recentValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WavyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WavyId);
      }
      if (Sensor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sensor);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Timestamp);
      }
      recentValues_.WriteTo(ref output, _repeated_recentValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WavyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WavyId);
      }
      if (Sensor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sensor);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      size += recentValues_.CalculateSize(_repeated_recentValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorRequest other) {
      if (other == null) {
        return;
      }
      if (other.WavyId.Length != 0) {
        WavyId = other.WavyId;
      }
      if (other.Sensor.Length != 0) {
        Sensor = other.Sensor;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      recentValues_.Add(other.recentValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WavyId = input.ReadString();
            break;
          }
          case 18: {
            Sensor = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            Timestamp = input.ReadString();
            break;
          }
          case 42:
          case 41: {
            recentValues_.AddEntriesFrom(input, _repeated_recentValues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WavyId = input.ReadString();
            break;
          }
          case 18: {
            Sensor = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            Timestamp = input.ReadString();
            break;
          }
          case 42:
          case 41: {
            recentValues_.AddEntriesFrom(ref input, _repeated_recentValues_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SensorResponse : pb::IMessage<SensorResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorResponse> _parser = new pb::MessageParser<SensorResponse>(() => new SensorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PreProcessRPC.ProcessReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorResponse(SensorResponse other) : this() {
      isValid_ = other.isValid_;
      processedValue_ = other.processedValue_;
      mean_ = other.mean_;
      stddev_ = other.stddev_;
      isOutlier_ = other.isOutlier_;
      deltaFromLast_ = other.deltaFromLast_;
      trend_ = other.trend_;
      riskLevel_ = other.riskLevel_;
      normalizedTimestamp_ = other.normalizedTimestamp_;
      onSchedule_ = other.onSchedule_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorResponse Clone() {
      return new SensorResponse(this);
    }

    /// <summary>Field number for the "isValid" field.</summary>
    public const int IsValidFieldNumber = 1;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    /// <summary>Field number for the "processedValue" field.</summary>
    public const int ProcessedValueFieldNumber = 2;
    private string processedValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProcessedValue {
      get { return processedValue_; }
      set {
        processedValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mean" field.</summary>
    public const int MeanFieldNumber = 3;
    private double mean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mean {
      get { return mean_; }
      set {
        mean_ = value;
      }
    }

    /// <summary>Field number for the "stddev" field.</summary>
    public const int StddevFieldNumber = 4;
    private double stddev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Stddev {
      get { return stddev_; }
      set {
        stddev_ = value;
      }
    }

    /// <summary>Field number for the "isOutlier" field.</summary>
    public const int IsOutlierFieldNumber = 5;
    private bool isOutlier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOutlier {
      get { return isOutlier_; }
      set {
        isOutlier_ = value;
      }
    }

    /// <summary>Field number for the "deltaFromLast" field.</summary>
    public const int DeltaFromLastFieldNumber = 6;
    private double deltaFromLast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DeltaFromLast {
      get { return deltaFromLast_; }
      set {
        deltaFromLast_ = value;
      }
    }

    /// <summary>Field number for the "trend" field.</summary>
    public const int TrendFieldNumber = 7;
    private string trend_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Trend {
      get { return trend_; }
      set {
        trend_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "riskLevel" field.</summary>
    public const int RiskLevelFieldNumber = 8;
    private string riskLevel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RiskLevel {
      get { return riskLevel_; }
      set {
        riskLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "normalizedTimestamp" field.</summary>
    public const int NormalizedTimestampFieldNumber = 9;
    private string normalizedTimestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NormalizedTimestamp {
      get { return normalizedTimestamp_; }
      set {
        normalizedTimestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "onSchedule" field.</summary>
    public const int OnScheduleFieldNumber = 10;
    private bool onSchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnSchedule {
      get { return onSchedule_; }
      set {
        onSchedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsValid != other.IsValid) return false;
      if (ProcessedValue != other.ProcessedValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mean, other.Mean)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Stddev, other.Stddev)) return false;
      if (IsOutlier != other.IsOutlier) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DeltaFromLast, other.DeltaFromLast)) return false;
      if (Trend != other.Trend) return false;
      if (RiskLevel != other.RiskLevel) return false;
      if (NormalizedTimestamp != other.NormalizedTimestamp) return false;
      if (OnSchedule != other.OnSchedule) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      if (ProcessedValue.Length != 0) hash ^= ProcessedValue.GetHashCode();
      if (Mean != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mean);
      if (Stddev != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Stddev);
      if (IsOutlier != false) hash ^= IsOutlier.GetHashCode();
      if (DeltaFromLast != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DeltaFromLast);
      if (Trend.Length != 0) hash ^= Trend.GetHashCode();
      if (RiskLevel.Length != 0) hash ^= RiskLevel.GetHashCode();
      if (NormalizedTimestamp.Length != 0) hash ^= NormalizedTimestamp.GetHashCode();
      if (OnSchedule != false) hash ^= OnSchedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsValid != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsValid);
      }
      if (ProcessedValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProcessedValue);
      }
      if (Mean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mean);
      }
      if (Stddev != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Stddev);
      }
      if (IsOutlier != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsOutlier);
      }
      if (DeltaFromLast != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(DeltaFromLast);
      }
      if (Trend.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Trend);
      }
      if (RiskLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RiskLevel);
      }
      if (NormalizedTimestamp.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NormalizedTimestamp);
      }
      if (OnSchedule != false) {
        output.WriteRawTag(80);
        output.WriteBool(OnSchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsValid != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsValid);
      }
      if (ProcessedValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProcessedValue);
      }
      if (Mean != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Mean);
      }
      if (Stddev != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Stddev);
      }
      if (IsOutlier != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsOutlier);
      }
      if (DeltaFromLast != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(DeltaFromLast);
      }
      if (Trend.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Trend);
      }
      if (RiskLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RiskLevel);
      }
      if (NormalizedTimestamp.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(NormalizedTimestamp);
      }
      if (OnSchedule != false) {
        output.WriteRawTag(80);
        output.WriteBool(OnSchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsValid != false) {
        size += 1 + 1;
      }
      if (ProcessedValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessedValue);
      }
      if (Mean != 0D) {
        size += 1 + 8;
      }
      if (Stddev != 0D) {
        size += 1 + 8;
      }
      if (IsOutlier != false) {
        size += 1 + 1;
      }
      if (DeltaFromLast != 0D) {
        size += 1 + 8;
      }
      if (Trend.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Trend);
      }
      if (RiskLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RiskLevel);
      }
      if (NormalizedTimestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NormalizedTimestamp);
      }
      if (OnSchedule != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      if (other.ProcessedValue.Length != 0) {
        ProcessedValue = other.ProcessedValue;
      }
      if (other.Mean != 0D) {
        Mean = other.Mean;
      }
      if (other.Stddev != 0D) {
        Stddev = other.Stddev;
      }
      if (other.IsOutlier != false) {
        IsOutlier = other.IsOutlier;
      }
      if (other.DeltaFromLast != 0D) {
        DeltaFromLast = other.DeltaFromLast;
      }
      if (other.Trend.Length != 0) {
        Trend = other.Trend;
      }
      if (other.RiskLevel.Length != 0) {
        RiskLevel = other.RiskLevel;
      }
      if (other.NormalizedTimestamp.Length != 0) {
        NormalizedTimestamp = other.NormalizedTimestamp;
      }
      if (other.OnSchedule != false) {
        OnSchedule = other.OnSchedule;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsValid = input.ReadBool();
            break;
          }
          case 18: {
            ProcessedValue = input.ReadString();
            break;
          }
          case 25: {
            Mean = input.ReadDouble();
            break;
          }
          case 33: {
            Stddev = input.ReadDouble();
            break;
          }
          case 40: {
            IsOutlier = input.ReadBool();
            break;
          }
          case 49: {
            DeltaFromLast = input.ReadDouble();
            break;
          }
          case 58: {
            Trend = input.ReadString();
            break;
          }
          case 66: {
            RiskLevel = input.ReadString();
            break;
          }
          case 74: {
            NormalizedTimestamp = input.ReadString();
            break;
          }
          case 80: {
            OnSchedule = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsValid = input.ReadBool();
            break;
          }
          case 18: {
            ProcessedValue = input.ReadString();
            break;
          }
          case 25: {
            Mean = input.ReadDouble();
            break;
          }
          case 33: {
            Stddev = input.ReadDouble();
            break;
          }
          case 40: {
            IsOutlier = input.ReadBool();
            break;
          }
          case 49: {
            DeltaFromLast = input.ReadDouble();
            break;
          }
          case 58: {
            Trend = input.ReadString();
            break;
          }
          case 66: {
            RiskLevel = input.ReadString();
            break;
          }
          case 74: {
            NormalizedTimestamp = input.ReadString();
            break;
          }
          case 80: {
            OnSchedule = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
