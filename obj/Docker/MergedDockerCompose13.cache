name: dockercompose9129934196659631904
services:
  agregator_app_1:
    build:
      context: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\agregators
      dockerfile: Dockerfile
    container_name: agregator_app_1
    depends_on:
      agregator1:
        condition: service_started
        required: true
    environment:
      AGG_TOKEN_AGG_01: tokenagr1
      AGGREGATOR_ID: AGG_01
      LISTEN_PORT: "13311"
      MYSQL_DB: agregator1_db_tp2
      MYSQL_HOST: agregator1
      MYSQL_PASS: root
      MYSQL_PORT: "3306"
      MYSQL_USER: root
      SUBSCRIPTION_KEY: sensor.#.temperature,sensor.#.hydrophone
    networks:
      default: null
    ports:
      - mode: ingress
        target: 13311
        published: "5001"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\agregators\autorizacoes
        target: /app/autorizacoes
        bind:
          create_host_path: true
  agregator_app_2:
    build:
      context: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\agregators
      dockerfile: Dockerfile
    container_name: agregator_app_2
    depends_on:
      agregator2:
        condition: service_started
        required: true
    environment:
      AGG_TOKEN_AGG_02: tokenagr2
      AGGREGATOR_ID: AGG_02
      LISTEN_PORT: "13312"
      MYSQL_DB: agregator2_db_tp2
      MYSQL_HOST: agregator2
      MYSQL_PASS: root
      MYSQL_PORT: "3306"
      MYSQL_USER: root
      SUBSCRIPTION_KEY: sensor.#.gyroscope
    networks:
      default: null
    ports:
      - mode: ingress
        target: 13312
        published: "5002"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\agregators\autorizacoes
        target: /app/autorizacoes
        bind:
          create_host_path: true
  agregator_app_3:
    build:
      context: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\agregators
      dockerfile: Dockerfile
    container_name: agregator_app_3
    depends_on:
      agregator3:
        condition: service_started
        required: true
    environment:
      AGG_TOKEN_AGG_03: tokenagr3
      AGGREGATOR_ID: AGG_03
      LISTEN_PORT: "13313"
      MYSQL_DB: agregator3_db_tp2
      MYSQL_HOST: agregator3
      MYSQL_PASS: root
      MYSQL_PORT: "3306"
      MYSQL_USER: root
      SUBSCRIPTION_KEY: sensor.#.hydrophone
    networks:
      default: null
    ports:
      - mode: ingress
        target: 13313
        published: "5003"
        protocol: tcp
  agregator1:
    container_name: mysql_agregator1_tp2
    environment:
      MYSQL_DATABASE: agregator1_db_tp2
      MYSQL_ROOT_PASSWORD: root
    image: mysql:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3306
        published: "3315"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\mysql-agregator1
        target: /docker-entrypoint-initdb.d
        bind:
          create_host_path: true
      - type: volume
        source: mysql-ag1-data
        target: /var/lib/mysql
        volume: {}
  agregator2:
    container_name: mysql_agregator2_tp2
    environment:
      MYSQL_DATABASE: agregator2_db_tp2
      MYSQL_ROOT_PASSWORD: root
    image: mysql:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3306
        published: "3316"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\mysql-agregator2
        target: /docker-entrypoint-initdb.d
        bind:
          create_host_path: true
      - type: volume
        source: mysql-ag2-data
        target: /var/lib/mysql
        volume: {}
  agregator3:
    container_name: mysql_agregator3_tp2
    environment:
      MYSQL_DATABASE: agregator3_db_tp2
      MYSQL_ROOT_PASSWORD: root
    image: mysql:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3306
        published: "3317"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\mysql-agregator3
        target: /docker-entrypoint-initdb.d
        bind:
          create_host_path: true
      - type: volume
        source: mysql-ag3-data
        target: /var/lib/mysql
        volume: {}
  hpc:
    build:
      context: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\hpc
      dockerfile: Dockerfile
    container_name: hpc_app
    depends_on:
      server:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_URLS: https://+:5001
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5001
        published: "5008"
        protocol: tcp
  preprocessrpc:
    build:
      context: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\preprocessrpc
      dockerfile: Dockerfile
    container_name: preprocessrpc
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5009"
        protocol: tcp
  rabbitmq:
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_PASS: sdtp2
      RABBITMQ_DEFAULT_USER: sdtp2
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
  server:
    container_name: mysql_server_tp2
    environment:
      MYSQL_DATABASE: server_db_tp2
      MYSQL_ROOT_PASSWORD: root
    image: mysql:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3306
        published: "3351"
        protocol: tcp
    restart: always
    volumes:
      - type: bind
        source: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\mysql-server
        target: /docker-entrypoint-initdb.d
        bind:
          create_host_path: true
      - type: volume
        source: mysql-server-data
        target: /var/lib/mysql
        volume: {}
  server_app:
    build:
      context: C:\Users\mfreq\Desktop\UTAD\Semestre 2\Sistemas Distribuidos\TP2\sd-tp2-rpc-pub-sub\server
      dockerfile: Dockerfile
    container_name: server_app
    depends_on:
      agregator1:
        condition: service_started
        required: true
      agregator2:
        condition: service_started
        required: true
      agregator3:
        condition: service_started
        required: true
      server:
        condition: service_started
        required: true
    environment:
      AGG_IDS: AGG_01,AGG_02,AGG_03
      AGG_TOKEN_AGG_01: tokenagr1
      AGG_TOKEN_AGG_02: tokenagr2
      AGG_TOKEN_AGG_03: tokenagr3
      HPC_ADDRESS: http://hpc_app:5001
      MYSQL_DB_AGG_01: agregator1_db_tp2
      MYSQL_DB_AGG_02: agregator2_db_tp2
      MYSQL_DB_AGG_03: agregator3_db_tp2
      MYSQL_DB_SERVER: server_db_tp2
      MYSQL_HOST_AGG_01: agregator1
      MYSQL_HOST_AGG_02: agregator2
      MYSQL_HOST_AGG_03: agregator3
      MYSQL_HOST_SERVER: server
      MYSQL_PASS: root
      MYSQL_PORT: "3306"
      MYSQL_USER: root
      SERVER_PORT: "15000"
    networks:
      default: null
    ports:
      - mode: ingress
        target: 15000
        published: "5005"
        protocol: tcp
networks:
  default:
    name: dockercompose9129934196659631904_default
volumes:
  mysql-ag1-data:
    name: dockercompose9129934196659631904_mysql-ag1-data
  mysql-ag2-data:
    name: dockercompose9129934196659631904_mysql-ag2-data
  mysql-ag3-data:
    name: dockercompose9129934196659631904_mysql-ag3-data
  mysql-server-data:
    name: dockercompose9129934196659631904_mysql-server-data